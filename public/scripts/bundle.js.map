{"version":3,"sources":["webpack://telegram-chat/./public/scripts/_functions.js","webpack://telegram-chat/webpack/bootstrap","webpack://telegram-chat/./public/scripts/main.js","webpack://telegram-chat/./public/scripts/_zoom.js","webpack://telegram-chat/./public/scripts/_auth.js","webpack://telegram-chat/./public/scripts/_chat.js"],"names":["module","exports","selectOne","selector","document","querySelector","selectAll","querySelectorAll","clearText","text","trim","toLowerCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","addEventListener","body","clientWidth","window","location","href","includes","style","zoom","height","clientHeight","e","socket","io","authHeadersItems","authForms","forEach","el","idx","classList","remove","add","signUpForm","avatarImgInput","avatarImgElement","firstNameInput","lastNameInput","emailInput","passwordInput","errorDisplay","target","files","reader","FileReader","onload","src","result","readAsDataURL","async","preventDefault","formData","FormData","append","value","response","fetch","method","json","ok","emit","user","reload","innerHTML","message","substring","signInForm","emailInputLogin","passwordInputLogin","errorDisplayLogin","headers","JSON","stringify","email","password","chatForm","typingField","userIdInput","sendMessageBtn","chatList","contactList","getAttribute","userId","reset","on","data","messageText","avatar","firstName","role","id","broadcast"],"mappings":"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","file":"bundle.js","sourcesContent":["function selectOne(selector) {\r\n   return document.querySelector(selector)\r\n}\r\n\r\nfunction selectAll(selector) {\r\n   return document.querySelectorAll(selector)\r\n}\r\n\r\nfunction clearText(text) {\r\n   return text.trim().toLowerCase()\r\n}\r\n\r\nmodule.exports = { selectOne, selectAll, clearText }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict'\r\n\r\nimport zoom from './_zoom'\r\nimport auth from './_auth'\r\nimport chat from './_chat'\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n   zoom()\r\n   auth()\r\n   chat()\r\n})","import { selectOne } from './_functions'\r\n\r\nexport default function () {\r\n   try {\r\n      if (document.body.clientWidth < 1400 && !window.location.href.includes('/auth')) {\r\n         document.body.style.zoom = 0.7\r\n         selectOne('.app').style.height = document.body.clientHeight * 1.43 + 'px'\r\n      }\r\n   } catch (e) {}\r\n}","import {selectOne, selectAll, clearText} from './_functions'\r\n\r\nexport default function () {\r\n   try {\r\n      const socket = io()\r\n      // hide or show auth form\r\n      const authHeadersItems = selectAll('.auth__header__item'),\r\n         authForms = selectAll('.auth__form')\r\n\r\n      authHeadersItems.forEach((el, idx) => {\r\n         el.addEventListener('click', e => {\r\n            authForms.forEach(el => el.classList.remove('auth__form--visible'))\r\n            authForms[idx].classList.add('auth__form--visible')\r\n            authHeadersItems.forEach(el => el.classList.remove('auth__header__item--active'))\r\n            authHeadersItems[idx].classList.add('auth__header__item--active')\r\n         })\r\n      })\r\n\r\n      // signup\r\n      const signUpForm = selectOne('#auth-signup'),\r\n         avatarImgInput = signUpForm.querySelector('#avatar'),\r\n         avatarImgElement = signUpForm.querySelector('.avatar > img'),\r\n         firstNameInput = signUpForm.querySelector('#first-name'),\r\n         lastNameInput = signUpForm.querySelector('#last-name'),\r\n         emailInput = signUpForm.querySelector('#signup-email'),\r\n         passwordInput = signUpForm.querySelector('#signup-password'),\r\n         errorDisplay = signUpForm.querySelector('#error-display-signup')\r\n\r\n      avatarImgInput.addEventListener('change', e => {\r\n         if (e.target.files && e.target.files[0]) {\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n               avatarImgElement.src = e.target.result\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n         }\r\n      })\r\n\r\n      signUpForm.addEventListener('submit', async e => {\r\n         e.preventDefault()\r\n\r\n         const formData = new FormData()\r\n\r\n         formData.append('avatar', avatarImgInput.files[0])\r\n         formData.append('firstName', clearText(firstNameInput.value))\r\n         formData.append('lastName', clearText(lastNameInput.value))\r\n         formData.append('email', clearText(emailInput.value))\r\n         formData.append('password', passwordInput.value)\r\n\r\n         let response = await fetch('/auth/signup', {\r\n            method: 'POST',\r\n            body: formData\r\n         })\r\n\r\n         response = await response.json()\r\n\r\n         if (response.ok) {\r\n            socket.emit('login', {\r\n               user: response.result.user\r\n            })\r\n            return window.location.reload()\r\n         }\r\n\r\n         errorDisplay.innerHTML = `\r\n            <div class=\"alert\">${response.message.substring(6)}</div>\r\n         `\r\n      })\r\n\r\n      // signin\r\n      const signInForm = selectOne('#auth-signin'),\r\n         emailInputLogin = signInForm.querySelector('#email'),\r\n         passwordInputLogin = signInForm.querySelector('#password'),\r\n         errorDisplayLogin = signInForm.querySelector('#error-display-signin')\r\n\r\n      signInForm.addEventListener('submit', async e => {\r\n         e.preventDefault()\r\n\r\n         let response = await fetch('/auth/signin', {\r\n            headers: {\r\n               'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n               email: clearText(emailInputLogin.value),\r\n               password: passwordInputLogin.value\r\n            })\r\n         })\r\n\r\n         response = await response.json()\r\n\r\n         if (response.ok) {\r\n            return window.location.reload()\r\n         }\r\n\r\n         errorDisplayLogin.innerHTML = `\r\n            <div class=\"alert\">${response.message.substring(6)}</div>\r\n         `\r\n      })\r\n   } catch (e) {\r\n   }\r\n}","import {selectOne} from './_functions'\r\n\r\nexport default function () {\r\n   const socket = io()\r\n\r\n   const chatForm = selectOne('#chat-form'),\r\n      typingField = chatForm.querySelector('#typing-field'),\r\n      userIdInput = chatForm.querySelector('[name=\"userId\"]'),\r\n      sendMessageBtn = chatForm.querySelector('#send-message'),\r\n      chatList = selectOne('.messages-list'),\r\n      contactList = selectOne('.chat-list__ul')\r\n\r\n   chatForm.addEventListener('submit', e => {\r\n      e.preventDefault()\r\n\r\n      let avatar = \"<%= user.avatar %>\"\r\n      chatList.innerHTML += `\r\n         <li class=\"messages__item\">\r\n           <div class=\"message-text send\">\r\n               <p>${typingField.value.trim()}</p>\r\n               <time class=\"message-time\">12:05</time>\r\n           </div>\r\n           <div class=\"message-owner-img\">\r\n               <img src=\"${sendMessageBtn.getAttribute('data-avatar')}\" alt=\"\">\r\n           </div>\r\n         </li>\r\n      `\r\n\r\n      socket.emit('new-message', {\r\n         message: typingField.value,\r\n         userId: userIdInput.value\r\n      })\r\n\r\n      e.target.reset()\r\n   })\r\n\r\n   socket.on('new-message', data => {\r\n      chatList.innerHTML += `\r\n         <li class=\"messages__item\">\r\n           <div class=\"message-owner-img\">\r\n               <img src=\"${data.message['user.avatar']}\" alt=\"\">\r\n           </div>\r\n           <div class=\"message-text received\">\r\n               <p>${data.message.messageText}</p>\r\n               <time class=\"message-time\">12:05</time>\r\n           </div>\r\n         </li>\r\n       `\r\n   })\r\n\r\n   socket.on('login', data => {\r\n      contactList.innerHTML += `\r\n         <li class=\"chat-list__li active-contact\" id=\"${data.user.userId}\">\r\n             <div class=\"contact-img\">\r\n                 <img src=\"${data.user.avatar}\">\r\n                 <div class=\"active-indicator\"></div>\r\n             </div>\r\n             <div class=\"chat-info\">\r\n                 <h3 class=\"contact-name\">${data.user.firstName}</h3>\r\n                 <div class=\"last-message\"><strong>role: </strong>${data.user.role}</div>\r\n             </div>\r\n         </li>\r\n      `\r\n   })\r\n\r\n   socket.on('left', data => {\r\n      const id = userIdInput.value\r\n\r\n      socket.emit('left-real', {\r\n         id: userIdInput.value\r\n      })\r\n   })\r\n\r\n   socket.on('disconnect', () => {\r\n      socket.broadcast.emit('left-real', {\r\n         id: userIdInput.value\r\n      })\r\n   })\r\n\r\n   socket.on('left-real', data => {\r\n      document.querySelector(`#${data.id}`).classList.remove('active-contact')\r\n   })\r\n}"],"sourceRoot":""}